{
    "info": {
        "_postman_id": "99dcbddd-62ac-4278-bd57-6588616ed337",
        "name": "Skram Sports Betting",
        "description": "CRUD actions for Skram Sports Betting",
        "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
        "_exporter_id": "1874736",
        "_collection_link": "https://martian-desert-959067.postman.co/workspace/Lance-Marks~0e1d255a-a3e7-4419-ab23-b24e08dd1940/collection/1874736-99dcbddd-62ac-4278-bd57-6588616ed337?action=share&source=collection_link&creator=1874736"
    },
    "item": [
        {
            "name": "Get Teams",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/teams",
                    "host": ["{{base_url}}"],
                    "path": ["api", "teams"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Login",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/login",
                    "host": ["{{base_url}}"],
                    "path": ["api", "login"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get  Increment",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/increment",
                    "host": ["{{base_url}}"],
                    "path": ["api", "increment"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Bets",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/bets",
                    "host": ["{{base_url}}"],
                    "path": ["api", "bets"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Transactions",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/transactions",
                    "host": ["{{base_url}}"],
                    "path": ["api", "transactions"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Accounts",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/accounts",
                    "host": ["{{base_url}}"],
                    "path": ["api", "accounts"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get AccountBalances",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/accountbalances",
                    "host": ["{{base_url}}"],
                    "path": ["api", "accountbalances"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Accounts By ID",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/accounts/0x5e9629a9ccb75a7264f2edbec88db824e99f7d2f",
                    "host": ["{{base_url}}"],
                    "path": [
                        "api",
                        "accounts",
                        "0x5e9629a9ccb75a7264f2edbec88db824e99f7d2f"
                    ]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Bets By User ID",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/bets/2",
                    "host": ["{{base_url}}"],
                    "path": ["api", "bets", "2"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get  Users",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/users",
                    "host": ["{{base_url}}"],
                    "path": ["api", "users"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Games",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/games",
                    "host": ["{{base_url}}"],
                    "path": ["api", "games"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Games By Team ID",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/games/5",
                    "host": ["{{base_url}}"],
                    "path": ["api", "games", "5"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Get Team By ID",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Status code is 200\", function () {",
                            "    pm.response.to.have.status(200);",
                            "});"
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "GET",
                "header": [],
                "url": {
                    "raw": "{{base_url}}/api/teams/1",
                    "host": ["{{base_url}}"],
                    "path": ["api", "teams", "1"]
                },
                "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
            },
            "response": []
        },
        {
            "name": "Create Game",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"awayTeam\": \"Dodgers\",\n    \"homeTeam\": \"Blue Jays\",\n    \"awayMoneyLine\": 148,\n    \"homeMoneyLine\": -205,\n    \"gameTime\": \"2024-04-27T15:07:00.000Z\"\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/games",
                    "host": ["{{base_url}}"],
                    "path": ["api", "games"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Create Contract Game",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"id\": 5,\n    \"away_team_id\": 10,\n    \"home_team_id\": 27,\n    \"away_money_line\": -132,\n    \"home_money_line\": 112\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/games",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "games"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Create Contract Token Approval",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"approval_amount\": 100\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/tokens/approval",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "tokens", "approval"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Get Contract Token Allowance",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/tokens/allowance",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "tokens", "allowance"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Get Contract Token Balance",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "request": {
                "method": "GET",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/tokens/balance",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "tokens", "balance"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Update Game Started",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"away_score\": 5,\n    \"home_score\": 1,\n    \"action\": \"start\"\n\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/games/5",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "games", "5"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Update Game Finished",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n    \"away_score\": 5,\n    \"home_score\": 1,\n    \"action\": \"finish\"\n\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/games/5",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "games", "5"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Create Bet",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "    {\n        \"userId\": 2,\n        \"matchId\": 8,\n        \"teamId\": 11,\n        \"amount\": \"200\"\n    }",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/bets",
                    "host": ["{{base_url}}"],
                    "path": ["api", "bets"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Create Contracts Bets",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful POST request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript",
                        "packages": {}
                    }
                }
            ],
            "request": {
                "method": "POST",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "    {\n        \"game_id\": 5,\n        \"team_id\": 10,\n        \"bet_amount\": 1\n    }",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/contract/bets",
                    "host": ["{{base_url}}"],
                    "path": ["api", "contract", "bets"]
                },
                "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
            },
            "response": []
        },
        {
            "name": "Update Game",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful PUT request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "PUT",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "{\n\t\"awayScore\": 25,\n    \"homeScore\": 13\n}",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/games/41",
                    "host": ["{{base_url}}"],
                    "path": ["api", "games", "41"]
                },
                "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
            },
            "response": []
        },
        {
            "name": "Delete Game",
            "event": [
                {
                    "listen": "test",
                    "script": {
                        "exec": [
                            "pm.test(\"Successful DELETE request\", function () {",
                            "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                            "});",
                            ""
                        ],
                        "type": "text/javascript"
                    }
                }
            ],
            "request": {
                "method": "DELETE",
                "header": [],
                "body": {
                    "mode": "raw",
                    "raw": "",
                    "options": {
                        "raw": {
                            "language": "json"
                        }
                    }
                },
                "url": {
                    "raw": "{{base_url}}/api/games/41",
                    "host": ["{{base_url}}"],
                    "path": ["api", "games", "41"]
                },
                "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
            },
            "response": []
        }
    ],
    "event": [
        {
            "listen": "prerequest",
            "script": {
                "type": "text/javascript",
                "exec": [""]
            }
        },
        {
            "listen": "test",
            "script": {
                "type": "text/javascript",
                "exec": [""]
            }
        }
    ],
    "variable": [
        {
            "key": "id",
            "value": "1"
        },
        {
            "key": "base_url",
            "value": "https://postman-rest-api-learner.glitch.me/"
        }
    ]
}
